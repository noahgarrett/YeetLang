{
   "Program": {
      "statements": [
         {
            "FunctionStatement": {
               "type": "FunctionStatement",
               "name": {
                  "type": "IdentifierLiteral",
                  "value": "main",
                  "value_type": null
               },
               "return_type": "int",
               "parameters": [],
               "body": {
                  "type": "BlockStatement",
                  "statements": [
                     {
                        "token": "let",
                        "name": {
                           "type": "IdentifierLiteral",
                           "value": "a",
                           "value_type": null
                        },
                        "value": {
                           "type": "InfixExpression",
                           "left_node": {
                              "type": "InfixExpression",
                              "left_node": {
                                 "type": "IntegerLiteral",
                                 "value": 1
                              },
                              "operator": "+",
                              "right_node": {
                                 "type": "IntegerLiteral",
                                 "value": 2
                              }
                           },
                           "operator": "-",
                           "right_node": {
                              "type": "InfixExpression",
                              "left_node": {
                                 "type": "InfixExpression",
                                 "left_node": {
                                    "type": "InfixExpression",
                                    "left_node": {
                                       "type": "IntegerLiteral",
                                       "value": 3
                                    },
                                    "operator": "*",
                                    "right_node": {
                                       "type": "IntegerLiteral",
                                       "value": 4
                                    }
                                 },
                                 "operator": "/",
                                 "right_node": {
                                    "type": "InfixExpression",
                                    "left_node": {
                                       "type": "IntegerLiteral",
                                       "value": 4
                                    },
                                    "operator": "-",
                                    "right_node": {
                                       "type": "IntegerLiteral",
                                       "value": 2
                                    }
                                 }
                              },
                              "operator": "/",
                              "right_node": {
                                 "type": "IntegerLiteral",
                                 "value": 2
                              }
                           }
                        },
                        "value_type": "int"
                     },
                     {
                        "type": "ReturnStatement",
                        "return_value": {
                           "type": "IdentifierLiteral",
                           "value": "a",
                           "value_type": null
                        }
                     }
                  ]
               }
            }
         }
      ]
   }
}